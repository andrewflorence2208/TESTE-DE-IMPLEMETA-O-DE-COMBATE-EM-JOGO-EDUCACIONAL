@import url('https://fonts.googleapis.com/css2?family=Chakra+Petch:wght@500&family=Didact+Gothic&family=EB+Garamond&family=Exo+2&display=swap');

:root {
	--pixel-bg-game-board: white;
	/* ↑ Inner background color */
	
	--pixel-border-game-board: black;
	/* ↑ Inner border color */
	
	--pixel-border-2-game-board: white;
	/* ↑ Middle border color */
	
	--pixel-border-3-game-board: var(--pixel-border-game-board);
	/* ↑ Outer border color */
	
	--pixel-game-board: 3px;
	/* ↑ Pixel size */
}

.game-board {
	background: var(--pixel-bg-game-board);
	box-shadow:
		
	/* Inner Background Color */
		0 calc(var(--pixel-game-board) * -3) 0 calc(var(--pixel-game-board) * -1) var(--pixel-bg-game-board),
		0 calc(var(--pixel-game-board) * 3) 0 calc(var(--pixel-game-board) * -1) var(--pixel-bg-game-board),
		0 calc(var(--pixel-game-board) * -6) 0 calc(var(--pixel-game-board) * -2) var(--pixel-bg-game-board),
		0 calc(var(--pixel-game-board) * 6) 0 calc(var(--pixel-game-board) * -2) var(--pixel-bg-game-board),
		0 calc(var(--pixel-game-board) * -9) 0 calc(var(--pixel-game-board) * -4) var(--pixel-bg-game-board),
		0 calc(var(--pixel-game-board) * 9) 0 calc(var(--pixel-game-board) * -4) var(--pixel-bg-game-board),
		0 calc(var(--pixel-game-board) * -12) 0 calc(var(--pixel-game-board) * -6) var(--pixel-bg-game-board),
		0 calc(var(--pixel-game-board) * 12) 0 calc(var(--pixel-game-board) * -6) var(--pixel-bg-game-board),
		
	/* Pixel Border Layer 1 */
		calc(var(--pixel-game-board) * -1) 0 0 0 var(--pixel-border-game-board),
		var(--pixel-game-board) 0 0 0 var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * -2) 0 0 var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * 2) 0 0 var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * -5) 0 calc(var(--pixel-game-board) * -1) var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * 5) 0 calc(var(--pixel-game-board) * -1) var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * -7) 0 calc(var(--pixel-game-board) * -2) var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * 7) 0 calc(var(--pixel-game-board) * -2) var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * -10) 0 calc(var(--pixel-game-board) * -4) var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * 10) 0 calc(var(--pixel-game-board) * -4) var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * -13) 0 calc(var(--pixel-game-board) * -6) var(--pixel-border-game-board),
		0 calc(var(--pixel-game-board) * 13) 0 calc(var(--pixel-game-board) * -6) var(--pixel-border-game-board),
		
	/* Pixel Border Layer 2 */
		calc(var(--pixel-game-board) * -2) 0 0 0 var(--pixel-border-2-game-board),
		calc(var(--pixel-game-board) * 2) 0 0 0 var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * -1) 0 var(--pixel-game-board) var(--pixel-border-2-game-board), 
		0 var(--pixel-game-board) 0 var(--pixel-game-board) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * -4) 0 0 var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * 4) 0 0 var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * -6) 0 calc(var(--pixel-game-board) * -1) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * 6) 0 calc(var(--pixel-game-board) * -1) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * -8) 0 calc(var(--pixel-game-board) * -2) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * 8) 0 calc(var(--pixel-game-board) * -2) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * -11) 0 calc(var(--pixel-game-board) * -4) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * 11) 0 calc(var(--pixel-game-board) * -4) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * -14) 0 calc(var(--pixel-game-board) * -6) var(--pixel-border-2-game-board),
		0 calc(var(--pixel-game-board) * 14) 0 calc(var(--pixel-game-board) * -6) var(--pixel-border-2-game-board),
		
	/* Border Layer 3: --pixel-border-3-game-board */
		calc(var(--pixel-game-board) * -3) 0 0 0 var(--pixel-border-3-game-board),
		calc(var(--pixel-game-board) * 3) 0 0 0 var(--pixel-border-3-game-board),
		0 0 0 calc(var(--pixel-game-board) * 2) var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * -3) 0 var(--pixel-game-board) var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * 3) 0 var(--pixel-game-board) var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * -5) 0 0 var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * 5) 0 0 var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * -7) 0 calc(var(--pixel-game-board) * -1) var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * 7) 0 calc(var(--pixel-game-board) * -1) var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * -9) 0 calc(var(--pixel-game-board) * -2) var(--pixel-border-3-game-board), 
		0 calc(var(--pixel-game-board) * 9) 0 calc(var(--pixel-game-board) * -2) var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * -12) 0 calc(var(--pixel-game-board) * -4) var(--pixel-border-3-game-board), 
		0 calc(var(--pixel-game-board) * 12) 0 calc(var(--pixel-game-board) * -4) var(--pixel-border-3-game-board),
		0 calc(var(--pixel-game-board) * -15) 0 calc(var(--pixel-game-board) * -6) var(--pixel-border-3-game-board), 
		0 calc(var(--pixel-game-board) * 15) 0 calc(var(--pixel-game-board) * -6) var(--pixel-border-3-game-board);
}

:root {
	--pixel-bg-enemy-info: red;
	/* ↑ Inner background color */
	
	--pixel-border-enemy-info: black;
	/* ↑ Inner border color */
	
	--pixel-border-2-enemy-info: black;
	/* ↑ Middle border color */
	
	--pixel-border-3-enemy-info: var(--pixel-border-enemy-info);
	/* ↑ Outer border color */
	
	--pixel: 2px;
	/* ↑ Pixel size */
}

.enemy-info {
	background: var(--pixel-bg-enemy-info);
	box-shadow:
		
	/* Inner Background Color */
		0 calc(var(--pixel) * -3) 0 calc(var(--pixel) * -1) var(--pixel-bg-enemy-info),
		0 calc(var(--pixel) * 3) 0 calc(var(--pixel) * -1) var(--pixel-bg-enemy-info),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -2) var(--pixel-bg-enemy-info),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -2) var(--pixel-bg-enemy-info),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -4) var(--pixel-bg-enemy-info),
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -4) var(--pixel-bg-enemy-info),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -6) var(--pixel-bg-enemy-info),
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -6) var(--pixel-bg-enemy-info),
		
	/* Pixel Border Layer 1 */
		calc(var(--pixel) * -1) 0 0 0 var(--pixel-border-enemy-info),
		var(--pixel) 0 0 0 var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * -2) 0 0 var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * 2) 0 0 var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * -5) 0 calc(var(--pixel) * -1) var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * 5) 0 calc(var(--pixel) * -1) var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -2) var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -2) var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * -10) 0 calc(var(--pixel) * -4) var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * 10) 0 calc(var(--pixel) * -4) var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * -13) 0 calc(var(--pixel) * -6) var(--pixel-border-enemy-info),
		0 calc(var(--pixel) * 13) 0 calc(var(--pixel) * -6) var(--pixel-border-enemy-info),
		
	/* Pixel Border Layer 2 */
		calc(var(--pixel) * -2) 0 0 0 var(--pixel-border-2-enemy-info),
		calc(var(--pixel) * 2) 0 0 0 var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * -1) 0 var(--pixel) var(--pixel-border-2-enemy-info), 
		0 var(--pixel) 0 var(--pixel) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * -4) 0 0 var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * 4) 0 0 var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -1) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -1) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * -8) 0 calc(var(--pixel) * -2) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * 8) 0 calc(var(--pixel) * -2) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * -11) 0 calc(var(--pixel) * -4) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * 11) 0 calc(var(--pixel) * -4) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * -14) 0 calc(var(--pixel) * -6) var(--pixel-border-2-enemy-info),
		0 calc(var(--pixel) * 14) 0 calc(var(--pixel) * -6) var(--pixel-border-2-enemy-info),
		
	/* Border Layer 3: --pixel-border-3-enemy-info */
		calc(var(--pixel) * -3) 0 0 0 var(--pixel-border-3-enemy-info),
		calc(var(--pixel) * 3) 0 0 0 var(--pixel-border-3-enemy-info),
		0 0 0 calc(var(--pixel) * 2) var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * -3) 0 var(--pixel) var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * 3) 0 var(--pixel) var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * -5) 0 0 var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * 5) 0 0 var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -1) var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -1) var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -2) var(--pixel-border-3-enemy-info), 
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -2) var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -4) var(--pixel-border-3-enemy-info), 
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -4) var(--pixel-border-3-enemy-info),
		0 calc(var(--pixel) * -15) 0 calc(var(--pixel) * -6) var(--pixel-border-3-enemy-info), 
		0 calc(var(--pixel) * 15) 0 calc(var(--pixel) * -6) var(--pixel-border-3-enemy-info);
}

.enemy-info{
  position: absolute;
  right: 500px;
  top: 30px;
  height: min-content;
  width: min-content;
  padding: 5px;
}


:root {
	--pixel-bg-char-info: blue;
	/* ↑ Inner background color */
	
	--pixel-border-char-info: black;
	/* ↑ Inner border color */
	
	--pixel-border-2-char-info: black;
	/* ↑ Middle border color */
	
	--pixel-border-3-char-info: var(--pixel-border-char-info);
	/* ↑ Outer border color */
	
	--pixel: 2px;
	/* ↑ Pixel size */
}

.char-info {
	background: var(--pixel-bg-char-info);
	box-shadow:
		
	/* Inner Background Color */
		0 calc(var(--pixel) * -3) 0 calc(var(--pixel) * -1) var(--pixel-bg-char-info),
		0 calc(var(--pixel) * 3) 0 calc(var(--pixel) * -1) var(--pixel-bg-char-info),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -2) var(--pixel-bg-char-info),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -2) var(--pixel-bg-char-info),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -4) var(--pixel-bg-char-info),
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -4) var(--pixel-bg-char-info),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -6) var(--pixel-bg-char-info),
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -6) var(--pixel-bg-char-info),
		
	/* Pixel Border Layer 1 */
		calc(var(--pixel) * -1) 0 0 0 var(--pixel-border-char-info),
		var(--pixel) 0 0 0 var(--pixel-border-char-info),
		0 calc(var(--pixel) * -2) 0 0 var(--pixel-border-char-info),
		0 calc(var(--pixel) * 2) 0 0 var(--pixel-border-char-info),
		0 calc(var(--pixel) * -5) 0 calc(var(--pixel) * -1) var(--pixel-border-char-info),
		0 calc(var(--pixel) * 5) 0 calc(var(--pixel) * -1) var(--pixel-border-char-info),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -2) var(--pixel-border-char-info),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -2) var(--pixel-border-char-info),
		0 calc(var(--pixel) * -10) 0 calc(var(--pixel) * -4) var(--pixel-border-char-info),
		0 calc(var(--pixel) * 10) 0 calc(var(--pixel) * -4) var(--pixel-border-char-info),
		0 calc(var(--pixel) * -13) 0 calc(var(--pixel) * -6) var(--pixel-border-char-info),
		0 calc(var(--pixel) * 13) 0 calc(var(--pixel) * -6) var(--pixel-border-char-info),
		
	/* Pixel Border Layer 2 */
		calc(var(--pixel) * -2) 0 0 0 var(--pixel-border-2-char-info),
		calc(var(--pixel) * 2) 0 0 0 var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * -1) 0 var(--pixel) var(--pixel-border-2-char-info), 
		0 var(--pixel) 0 var(--pixel) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * -4) 0 0 var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * 4) 0 0 var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -1) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -1) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * -8) 0 calc(var(--pixel) * -2) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * 8) 0 calc(var(--pixel) * -2) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * -11) 0 calc(var(--pixel) * -4) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * 11) 0 calc(var(--pixel) * -4) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * -14) 0 calc(var(--pixel) * -6) var(--pixel-border-2-char-info),
		0 calc(var(--pixel) * 14) 0 calc(var(--pixel) * -6) var(--pixel-border-2-char-info),
		
	/* Border Layer 3: --pixel-border-3-char-info */
		calc(var(--pixel) * -3) 0 0 0 var(--pixel-border-3-char-info),
		calc(var(--pixel) * 3) 0 0 0 var(--pixel-border-3-char-info),
		0 0 0 calc(var(--pixel) * 2) var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * -3) 0 var(--pixel) var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * 3) 0 var(--pixel) var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * -5) 0 0 var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * 5) 0 0 var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -1) var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -1) var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -2) var(--pixel-border-3-char-info), 
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -2) var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -4) var(--pixel-border-3-char-info), 
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -4) var(--pixel-border-3-char-info),
		0 calc(var(--pixel) * -15) 0 calc(var(--pixel) * -6) var(--pixel-border-3-char-info), 
		0 calc(var(--pixel) * 15) 0 calc(var(--pixel) * -6) var(--pixel-border-3-char-info);
}

.char-info{
  position: absolute;
  left: 500px;
  bottom: 30px;
  height: min-content;
  width: min-content;
  padding: 5px;
}



* {
    box-sizing: border-box;
    font-family: 'Didact Gothic', serif;
    font-weight: bold;
}

body {
    margin: 0%;
    padding: 0%;
    background-image: linear-gradient(rgba(0, 0, 50, 0.5), transparent, rgba(0, 0, 50, 0.5)), url("BRICK_1A.png");
    background-size: 10%;
}

h3{
  padding:0%;
  margin: 0%;
}

b{
  color:aquamarine;
}


.game-board {
    position: relative;
    margin: auto;
    margin-top: 30px;
    height: 500px;
    width: 800px;
}



.info_painel{
  display: none;
  position:relative;

  margin: auto;
  margin-top: 30vh;

  height: min-content;

  background-color: black;
  color: white;

  border: 25px solid #b646b8;
  border-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='75' height='75'%3E%3Cg fill='none' stroke='%23B88846' stroke-width='2'%3E%3Cpath d='M1 1h73v73H1z'/%3E%3Cpath d='M8 8h59v59H8z'/%3E%3Cpath d='M8 8h16v16H8zM51 8h16v16H51zM51 51h16v16H51zM8 51h16v16H8z'/%3E%3C/g%3E%3Cg fill='%23B88846'%3E%3Ccircle cx='16' cy='16' r='2'/%3E%3Ccircle cx='59' cy='16' r='2'/%3E%3Ccircle cx='59' cy='59' r='2'/%3E%3Ccircle cx='16' cy='59' r='2'/%3E%3C/g%3E%3C/svg%3E") 25;


}


.painel {
    position: relative;
    height: 100px;
    width: 500px;
    margin: auto;
    margin-top: 70px;

    
}

.char {
    position: absolute;
    height: 100px;
    width: 100px;
    background-color: royalblue;
    left: 50px;
    bottom: 30px;
    animation: none;
    color: red;
}

.enemy {
    position: absolute;
    height: 100px;
    width: 100px;
    right: 50px;
    top: 30px;
    background-color: red;
}

.info_bt {
    float: right;
}

.button-pushable {
  position: relative;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  outline-offset: 4px;
  transition: filter 250ms;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

.button-shadow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: hsl(0deg 0% 0% / 0.25);
  will-change: transform;
  transform: translateY(2px);
  transition:
    transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

.button-edge {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: linear-gradient(
    to left,
    hsl(340deg 100% 16%) 0%,
    hsl(340deg 100% 32%) 8%,
    hsl(340deg 100% 32%) 92%,
    hsl(340deg 100% 16%) 100%
  );
}

.button-front {
  display: block;
  position: relative;
  padding: 12px 27px;
  border-radius: 12px;
  font-size: 1.1rem;
  color: white;
  background: hsl(345deg 100% 47%);
  will-change: transform;
  transform: translateY(-4px);
  transition:
    transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

@media (min-width: 768px) {
  .button-front {
    font-size: 1.25rem;
    padding: 12px 42px;
  }
}

.button-pushable:hover {
  filter: brightness(110%);
  -webkit-filter: brightness(110%);
}

.button-pushable:hover .button-front {
  transform: translateY(-6px);
  transition:
    transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

.button-pushable:active .button-front {
  transform: translateY(-2px);
  transition: transform 34ms;
}

.button-pushable:hover .button-shadow {
  transform: translateY(4px);
  transition:
    transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

.button-pushable:active .button-shadow {
  transform: translateY(1px);
  transition: transform 34ms;
}

.button-pushable:focus:not(:focus-visible) {
  outline: none;
}

/**/
.button-pushable2 {
  position: relative;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  outline-offset: 4px;
  transition: filter 250ms;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

.button-shadow2 {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: hsl(0deg 0% 0% / 0.25);
  will-change: transform;
  transform: translateY(2px);
  transition:
    transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

.button-edge2 {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: linear-gradient(
    to left,
    hsl(200deg 100% 16%) 0%,
    hsl(200deg 100% 32%) 8%,
    hsl(200deg 100% 32%) 92%,
    hsl(200deg 100% 16%) 100%
  );
}

.button-front2 {
  display: block;
  position: relative;
  padding: 12px 27px;
  border-radius: 12px;
  font-size: 1.1rem;
  color: white;
  background: hsl(205deg 100% 47%);
  will-change: transform;
  transform: translateY(-4px);
  transition:
    transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

@media (min-width: 768px) {
  .button-front2 {
    font-size: 1.25rem;
    padding: 12px 42px;
  }
}

.button-pushable2:hover {
  filter: brightness(110%);
  -webkit-filter: brightness(110%);
}

.button-pushable2:hover .button-front2 {
  transform: translateY(-6px);
  transition:
    transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

.button-pushable2:active .button-front2 {
  transform: translateY(-2px);
  transition: transform 34ms;
}

.button-pushable2:hover .button-shadow2 {
  transform: translateY(4px);
  transition:
    transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

.button-pushable2:active .button-shadow2 {
  transform: translateY(1px);
  transition: transform 34ms;
}

.button-pushable2:focus:not(:focus-visible) {
  outline: none;
}

.atk-button{
  position: absolute;
  left: 100px;
  top: 25px;
}

.def-button{
  position: absolute;
  right: 100px;
  top: 25px;
}


.continuar-bt , .info_bt{
  border: none;
  font-size: large;
  font-weight: 600;
  color: aquamarine;
  background-color: transparent;
}
/* ANIMATIONS AND CLASS ANIMATIONS */

@keyframes atk {
    99.9% {
        left: 100px;
        bottom: 60px;
    }

    100% {
        left: 50px;
        bottom: 30px;
    }
}

.atk {
    animation: atk 50ms;
}

@keyframes e_atk {
    99.9% {
        right: 100px;
        top: 60px;
    }

    100% {
        right: 50px;
        top: 30px;
    }
}

.e_atk {
    animation: e_atk 50ms;
}

@keyframes dying {
    0% {
        opacity: 100%;
    }

    100% {
        opacity: 0%;
    }
}

.dying {
    animation: dying 1000ms forwards;
}